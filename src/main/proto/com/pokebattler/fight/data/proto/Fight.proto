syntax = "proto3";
package com.pokebattler.fight.data.proto;
import "com/pokebattler/fight/data/proto/PokemonData.proto";
import "com/pokebattler/fight/data/proto/PokemonMove.proto";
import "com/pokebattler/fight/data/proto/PokemonId.proto";

enum AttackStrategyType {
	NONE = 0;
	QUICK_ATTACK_ONLY = 1;
	DEFENSE = 2;
	CINEMATIC_ATTACK_WHEN_POSSIBLE = 3;
	DEFENSE_RANDOM = 4;
	DEFENSE_LUCKY = 5;
	DODGE_SPECIALS = 6;
	DODGE_ALL = 7;
	DODGE_SPECIALS2 = 8;
	DODGE_ALL2 = 9;
	DODGE_SPECIALS3 = 10;
	DODGE_ALL3 = 11;
	DODGE_WEAVE_CAUTIOUS = 12;
	DODGE_WEAVE_REASONABLE = 13;
	DODGE_WEAVE_RISKY = 14;
	DODGE_WEAVE_SPECIALS = 15;
	DODGE_WEAVE_HUMAN = 16;
	DODGE_WEAVE_SPECIALS_HUMAN = 17;
	DEFENSE_RANDOM_MC = 18;
}
enum DodgeStrategyType {
	DODGE_100 = 0; // default is perfect dodging
	DODGE_0 = 1;
	DODGE_25 = 2;
	DODGE_50 = 3;
	DODGE_75 = 4;
	DODGE_90 = 5;
	DODGE_REACTION_TIME = 6;
	DODGE_REACTION_TIME2 = 7;
}

message Fight {
	PokemonData attacker1 = 1;
	PokemonData defender = 2;
	AttackStrategyType strategy = 3;
	AttackStrategyType defenseStrategy = 4;
	DodgeStrategyType dodgeStrategy = 5;
	bool includeDetails = 6;
	int64 seed = 7;
}

message FightResult {
	bool win = 1;
	int32 total_combat_time = 2;
	repeated CombatantResult combatants = 3;
	repeated CombatResult combat_result=4;
	Fight fight_parameters = 5;
	double power = 6;
	double powerLog = 7;
	int32 prestige = 8;
	int32 effective_combat_time = 9;
	double potions = 10;
	double overallRating = 11;
	int64 numSims = 12;
}

message CombatantResult {
	AttackStrategyType strategy = 1;
	int32 damage_dealt = 2;
	int32 combat_time=3;
	float dps = 4;
	int32 start_hp = 5;
	int32 end_hp = 6;
	Combatant combatant = 7;
	int64 id = 8;
	int32 energy = 9;
	PokemonId pokemon= 10;
	int32 cp = 11;
	DodgeStrategyType dodgeStrategy = 12;
}
enum Combatant {
	UNKNOWN=0;
	ATTACKER1=1;
	ATTACKER2=2;
	ATTACKER3=3;
	DEFENDER=4;
}
message CombatResult {
	int64 attacker_id = 1;
	Combatant attacker = 2;
	Combatant defender = 4;
	int32 combat_time = 5;
	int32 damage = 6;
	double dodge_percent=7;
	PokemonMove attack_move = 8;
	bool critical_hit = 9;
	int32 damage_time = 10;
	int32 current_time = 11;

}


